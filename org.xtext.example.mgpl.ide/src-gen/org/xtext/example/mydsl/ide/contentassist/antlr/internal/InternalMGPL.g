/*
 * generated by Xtext 2.24.0
 */
grammar InternalMGPL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MGPLGrammarAccess;

}
@parser::members {
	private MGPLGrammarAccess grammarAccess;

	public void setGrammarAccess(MGPLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleGame
entryRuleGame
:
{ before(grammarAccess.getGameRule()); }
	 ruleGame
{ after(grammarAccess.getGameRule()); } 
	 EOF 
;

// Rule Game
ruleGame 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGameAccess().getGroup()); }
		(rule__Game__Group__0)
		{ after(grammarAccess.getGameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDecl
entryRuleDecl
:
{ before(grammarAccess.getDeclRule()); }
	 ruleDecl
{ after(grammarAccess.getDeclRule()); } 
	 EOF 
;

// Rule Decl
ruleDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclAccess().getAlternatives()); }
		(rule__Decl__Alternatives)
		{ after(grammarAccess.getDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarDecl
entryRuleVarDecl
:
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDeclAccess().getAlternatives()); }
		(rule__VarDecl__Alternatives)
		{ after(grammarAccess.getVarDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInit
entryRuleInit
:
{ before(grammarAccess.getInitRule()); }
	 ruleInit
{ after(grammarAccess.getInitRule()); } 
	 EOF 
;

// Rule Init
ruleInit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitAccess().getGroup()); }
		(rule__Init__Group__0)
		{ after(grammarAccess.getInitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjDecl
entryRuleObjDecl
:
{ before(grammarAccess.getObjDeclRule()); }
	 ruleObjDecl
{ after(grammarAccess.getObjDeclRule()); } 
	 EOF 
;

// Rule ObjDecl
ruleObjDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjDeclAccess().getAlternatives()); }
		(rule__ObjDecl__Alternatives)
		{ after(grammarAccess.getObjDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttrAssList
entryRuleAttrAssList
:
{ before(grammarAccess.getAttrAssListRule()); }
	 ruleAttrAssList
{ after(grammarAccess.getAttrAssListRule()); } 
	 EOF 
;

// Rule AttrAssList
ruleAttrAssList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttrAssListAccess().getGroup()); }
		(rule__AttrAssList__Group__0)
		{ after(grammarAccess.getAttrAssListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttrAss
entryRuleAttrAss
:
{ before(grammarAccess.getAttrAssRule()); }
	 ruleAttrAss
{ after(grammarAccess.getAttrAssRule()); } 
	 EOF 
;

// Rule AttrAss
ruleAttrAss 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttrAssAccess().getGroup()); }
		(rule__AttrAss__Group__0)
		{ after(grammarAccess.getAttrAssAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStmtBlock
entryRuleStmtBlock
:
{ before(grammarAccess.getStmtBlockRule()); }
	 ruleStmtBlock
{ after(grammarAccess.getStmtBlockRule()); } 
	 EOF 
;

// Rule StmtBlock
ruleStmtBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStmtBlockAccess().getGroup()); }
		(rule__StmtBlock__Group__0)
		{ after(grammarAccess.getStmtBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStmt
entryRuleStmt
:
{ before(grammarAccess.getStmtRule()); }
	 ruleStmt
{ after(grammarAccess.getStmtRule()); } 
	 EOF 
;

// Rule Stmt
ruleStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStmtAccess().getAlternatives()); }
		(rule__Stmt__Alternatives)
		{ after(grammarAccess.getStmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStmt
entryRuleIfStmt
:
{ before(grammarAccess.getIfStmtRule()); }
	 ruleIfStmt
{ after(grammarAccess.getIfStmtRule()); } 
	 EOF 
;

// Rule IfStmt
ruleIfStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStmtAccess().getGroup()); }
		(rule__IfStmt__Group__0)
		{ after(grammarAccess.getIfStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForStmt
entryRuleForStmt
:
{ before(grammarAccess.getForStmtRule()); }
	 ruleForStmt
{ after(grammarAccess.getForStmtRule()); } 
	 EOF 
;

// Rule ForStmt
ruleForStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForStmtAccess().getGroup()); }
		(rule__ForStmt__Group__0)
		{ after(grammarAccess.getForStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssStmt
entryRuleAssStmt
:
{ before(grammarAccess.getAssStmtRule()); }
	 ruleAssStmt
{ after(grammarAccess.getAssStmtRule()); } 
	 EOF 
;

// Rule AssStmt
ruleAssStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssStmtAccess().getGroup()); }
		(rule__AssStmt__Group__0)
		{ after(grammarAccess.getAssStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlock
entryRuleBlock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getAlternatives()); }
		(rule__Block__Alternatives)
		{ after(grammarAccess.getBlockAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnimBlock
entryRuleAnimBlock
:
{ before(grammarAccess.getAnimBlockRule()); }
	 ruleAnimBlock
{ after(grammarAccess.getAnimBlockRule()); } 
	 EOF 
;

// Rule AnimBlock
ruleAnimBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnimBlockAccess().getGroup()); }
		(rule__AnimBlock__Group__0)
		{ after(grammarAccess.getAnimBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEventBlock
entryRuleEventBlock
:
{ before(grammarAccess.getEventBlockRule()); }
	 ruleEventBlock
{ after(grammarAccess.getEventBlockRule()); } 
	 EOF 
;

// Rule EventBlock
ruleEventBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventBlockAccess().getGroup()); }
		(rule__EventBlock__Group__0)
		{ after(grammarAccess.getEventBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVar
entryRuleVar
:
{ before(grammarAccess.getVarRule()); }
	 ruleVar
{ after(grammarAccess.getVarRule()); } 
	 EOF 
;

// Rule Var
ruleVar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarAccess().getGroup()); }
		(rule__Var__Group__0)
		{ after(grammarAccess.getVarAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarArray
entryRuleVarArray
:
{ before(grammarAccess.getVarArrayRule()); }
	 ruleVarArray
{ after(grammarAccess.getVarArrayRule()); } 
	 EOF 
;

// Rule VarArray
ruleVarArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarArrayAccess().getGroup()); }
		(rule__VarArray__Group__0)
		{ after(grammarAccess.getVarArrayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarProp
entryRuleVarProp
:
{ before(grammarAccess.getVarPropRule()); }
	 ruleVarProp
{ after(grammarAccess.getVarPropRule()); } 
	 EOF 
;

// Rule VarProp
ruleVarProp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarPropAccess().getGroup()); }
		(rule__VarProp__Group__0)
		{ after(grammarAccess.getVarPropAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpr
entryRuleExpr
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprAccess().getOrExprParserRuleCall()); }
		ruleOrExpr
		{ after(grammarAccess.getExprAccess().getOrExprParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpr
entryRuleOrExpr
:
{ before(grammarAccess.getOrExprRule()); }
	 ruleOrExpr
{ after(grammarAccess.getOrExprRule()); } 
	 EOF 
;

// Rule OrExpr
ruleOrExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExprAccess().getGroup()); }
		(rule__OrExpr__Group__0)
		{ after(grammarAccess.getOrExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpr
entryRuleAndExpr
:
{ before(grammarAccess.getAndExprRule()); }
	 ruleAndExpr
{ after(grammarAccess.getAndExprRule()); } 
	 EOF 
;

// Rule AndExpr
ruleAndExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExprAccess().getGroup()); }
		(rule__AndExpr__Group__0)
		{ after(grammarAccess.getAndExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelExpr
entryRuleRelExpr
:
{ before(grammarAccess.getRelExprRule()); }
	 ruleRelExpr
{ after(grammarAccess.getRelExprRule()); } 
	 EOF 
;

// Rule RelExpr
ruleRelExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelExprAccess().getGroup()); }
		(rule__RelExpr__Group__0)
		{ after(grammarAccess.getRelExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddExpr
entryRuleAddExpr
:
{ before(grammarAccess.getAddExprRule()); }
	 ruleAddExpr
{ after(grammarAccess.getAddExprRule()); } 
	 EOF 
;

// Rule AddExpr
ruleAddExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddExprAccess().getGroup()); }
		(rule__AddExpr__Group__0)
		{ after(grammarAccess.getAddExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultExpr
entryRuleMultExpr
:
{ before(grammarAccess.getMultExprRule()); }
	 ruleMultExpr
{ after(grammarAccess.getMultExprRule()); } 
	 EOF 
;

// Rule MultExpr
ruleMultExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultExprAccess().getGroup()); }
		(rule__MultExpr__Group__0)
		{ after(grammarAccess.getMultExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr
:
{ before(grammarAccess.getUnaryExprRule()); }
	 ruleUnaryExpr
{ after(grammarAccess.getUnaryExprRule()); } 
	 EOF 
;

// Rule UnaryExpr
ruleUnaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExprAccess().getGroup()); }
		(rule__UnaryExpr__Group__0)
		{ after(grammarAccess.getUnaryExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtom
entryRuleAtom
:
{ before(grammarAccess.getAtomRule()); }
	 ruleAtom
{ after(grammarAccess.getAtomRule()); } 
	 EOF 
;

// Rule Atom
ruleAtom 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomAccess().getAlternatives()); }
		(rule__Atom__Alternatives)
		{ after(grammarAccess.getAtomAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclAccess().getGroup_0()); }
		(rule__Decl__Group_0__0)
		{ after(grammarAccess.getDeclAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclAccess().getGroup_1()); }
		(rule__Decl__Group_1__0)
		{ after(grammarAccess.getDeclAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup_0()); }
		(rule__VarDecl__Group_0__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup_1()); }
		(rule__VarDecl__Group_1__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getGroup_0()); }
		(rule__ObjDecl__Group_0__0)
		{ after(grammarAccess.getObjDeclAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjDeclAccess().getGroup_1()); }
		(rule__ObjDecl__Group_1__0)
		{ after(grammarAccess.getObjDeclAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStmtAccess().getIfStmtParserRuleCall_0()); }
		ruleIfStmt
		{ after(grammarAccess.getStmtAccess().getIfStmtParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStmtAccess().getForStmtParserRuleCall_1()); }
		ruleForStmt
		{ after(grammarAccess.getStmtAccess().getForStmtParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStmtAccess().getGroup_2()); }
		(rule__Stmt__Group_2__0)
		{ after(grammarAccess.getStmtAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getAnimBlockParserRuleCall_0()); }
		ruleAnimBlock
		{ after(grammarAccess.getBlockAccess().getAnimBlockParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlockAccess().getEventBlockParserRuleCall_1()); }
		ruleEventBlock
		{ after(grammarAccess.getBlockAccess().getEventBlockParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExprAccess().getOpPLUSTerminalRuleCall_1_1_0_0()); }
		RULE_PLUS
		{ after(grammarAccess.getAddExprAccess().getOpPLUSTerminalRuleCall_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddExprAccess().getOpMINUSTerminalRuleCall_1_1_0_1()); }
		RULE_MINUS
		{ after(grammarAccess.getAddExprAccess().getOpMINUSTerminalRuleCall_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExprAccess().getUnaryExprParserRuleCall_0_0()); }
		ruleUnaryExpr
		{ after(grammarAccess.getMultExprAccess().getUnaryExprParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultExprAccess().getAtomParserRuleCall_0_1()); }
		ruleAtom
		{ after(grammarAccess.getMultExprAccess().getAtomParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExprAccess().getOpMULTTerminalRuleCall_1_1_0_0()); }
		RULE_MULT
		{ after(grammarAccess.getMultExprAccess().getOpMULTTerminalRuleCall_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultExprAccess().getOpDIVTerminalRuleCall_1_1_0_1()); }
		RULE_DIV
		{ after(grammarAccess.getMultExprAccess().getOpDIVTerminalRuleCall_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Alternatives_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExprAccess().getRightAssignment_1_2_0()); }
		(rule__MultExpr__RightAssignment_1_2_0)
		{ after(grammarAccess.getMultExprAccess().getRightAssignment_1_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultExprAccess().getRightAssignment_1_2_1()); }
		(rule__MultExpr__RightAssignment_1_2_1)
		{ after(grammarAccess.getMultExprAccess().getRightAssignment_1_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__OpAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getOpNOTTerminalRuleCall_1_0_0()); }
		RULE_NOT
		{ after(grammarAccess.getUnaryExprAccess().getOpNOTTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getOpMINUSTerminalRuleCall_1_0_1()); }
		RULE_MINUS
		{ after(grammarAccess.getUnaryExprAccess().getOpMINUSTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomAccess().getGroup_0()); }
		(rule__Atom__Group_0__0)
		{ after(grammarAccess.getAtomAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomAccess().getGroup_1()); }
		(rule__Atom__Group_1__0)
		{ after(grammarAccess.getAtomAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomAccess().getGroup_2()); }
		(rule__Atom__Group_2__0)
		{ after(grammarAccess.getAtomAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Game__Group__0__Impl
	rule__Game__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameAccess().getGameKeyword_0()); }
	'game'
	{ after(grammarAccess.getGameAccess().getGameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Game__Group__1__Impl
	rule__Game__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameAccess().getNameAssignment_1()); }
	(rule__Game__NameAssignment_1)
	{ after(grammarAccess.getGameAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Game__Group__2__Impl
	rule__Game__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getGameAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Game__Group__3__Impl
	rule__Game__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameAccess().getAttrAssListAssignment_3()); }
	(rule__Game__AttrAssListAssignment_3)?
	{ after(grammarAccess.getGameAccess().getAttrAssListAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Game__Group__4__Impl
	rule__Game__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getGameAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Game__Group__5__Impl
	rule__Game__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameAccess().getDeclAssignment_5()); }
	(rule__Game__DeclAssignment_5)*
	{ after(grammarAccess.getGameAccess().getDeclAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Game__Group__6__Impl
	rule__Game__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameAccess().getInitBlockAssignment_6()); }
	(rule__Game__InitBlockAssignment_6)
	{ after(grammarAccess.getGameAccess().getInitBlockAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Game__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameAccess().getFunctionsAssignment_7()); }
	(rule__Game__FunctionsAssignment_7)*
	{ after(grammarAccess.getGameAccess().getFunctionsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Decl__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decl__Group_0__0__Impl
	rule__Decl__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclAccess().getVarDeclParserRuleCall_0_0()); }
	ruleVarDecl
	{ after(grammarAccess.getDeclAccess().getVarDeclParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decl__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclAccess().getSemicolonKeyword_0_1()); }
	';'
	{ after(grammarAccess.getDeclAccess().getSemicolonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Decl__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decl__Group_1__0__Impl
	rule__Decl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclAccess().getObjDeclParserRuleCall_1_0()); }
	ruleObjDecl
	{ after(grammarAccess.getDeclAccess().getObjDeclParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getDeclAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_0__0__Impl
	rule__VarDecl__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getTypeAssignment_0_0()); }
	(rule__VarDecl__TypeAssignment_0_0)
	{ after(grammarAccess.getVarDeclAccess().getTypeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_0__1__Impl
	rule__VarDecl__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getNameAssignment_0_1()); }
	(rule__VarDecl__NameAssignment_0_1)
	{ after(grammarAccess.getVarDeclAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getValueAssignment_0_2()); }
	(rule__VarDecl__ValueAssignment_0_2)?
	{ after(grammarAccess.getVarDeclAccess().getValueAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1__0__Impl
	rule__VarDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getTypeAssignment_1_0()); }
	(rule__VarDecl__TypeAssignment_1_0)
	{ after(grammarAccess.getVarDeclAccess().getTypeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1__1__Impl
	rule__VarDecl__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getNameAssignment_1_1()); }
	(rule__VarDecl__NameAssignment_1_1)
	{ after(grammarAccess.getVarDeclAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1__2__Impl
	rule__VarDecl__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getLeftSquareBracketKeyword_1_2()); }
	'['
	{ after(grammarAccess.getVarDeclAccess().getLeftSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1__3__Impl
	rule__VarDecl__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getArrSizeAssignment_1_3()); }
	(rule__VarDecl__ArrSizeAssignment_1_3)
	{ after(grammarAccess.getVarDeclAccess().getArrSizeAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getRightSquareBracketKeyword_1_4()); }
	']'
	{ after(grammarAccess.getVarDeclAccess().getRightSquareBracketKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Init__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init__Group__0__Impl
	rule__Init__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitAccess().getEqualsSignKeyword_0()); }
	'='
	{ after(grammarAccess.getInitAccess().getEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitAccess().getExprAssignment_1()); }
	(rule__Init__ExprAssignment_1)
	{ after(grammarAccess.getInitAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjDecl__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_0__0__Impl
	rule__ObjDecl__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getTypeAssignment_0_0()); }
	(rule__ObjDecl__TypeAssignment_0_0)
	{ after(grammarAccess.getObjDeclAccess().getTypeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_0__1__Impl
	rule__ObjDecl__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getNameAssignment_0_1()); }
	(rule__ObjDecl__NameAssignment_0_1)
	{ after(grammarAccess.getObjDeclAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_0__2__Impl
	rule__ObjDecl__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getLeftParenthesisKeyword_0_2()); }
	'('
	{ after(grammarAccess.getObjDeclAccess().getLeftParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_0__3__Impl
	rule__ObjDecl__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getAttrAssListAssignment_0_3()); }
	(rule__ObjDecl__AttrAssListAssignment_0_3)?
	{ after(grammarAccess.getObjDeclAccess().getAttrAssListAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getRightParenthesisKeyword_0_4()); }
	')'
	{ after(grammarAccess.getObjDeclAccess().getRightParenthesisKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjDecl__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_1__0__Impl
	rule__ObjDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getTypeAssignment_1_0()); }
	(rule__ObjDecl__TypeAssignment_1_0)
	{ after(grammarAccess.getObjDeclAccess().getTypeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_1__1__Impl
	rule__ObjDecl__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getNameAssignment_1_1()); }
	(rule__ObjDecl__NameAssignment_1_1)
	{ after(grammarAccess.getObjDeclAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_1__2__Impl
	rule__ObjDecl__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getLeftSquareBracketKeyword_1_2()); }
	'['
	{ after(grammarAccess.getObjDeclAccess().getLeftSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_1__3__Impl
	rule__ObjDecl__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getArrSizeAssignment_1_3()); }
	(rule__ObjDecl__ArrSizeAssignment_1_3)
	{ after(grammarAccess.getObjDeclAccess().getArrSizeAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getRightSquareBracketKeyword_1_4()); }
	']'
	{ after(grammarAccess.getObjDeclAccess().getRightSquareBracketKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttrAssList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssList__Group__0__Impl
	rule__AttrAssList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssListAccess().getAttrAssAssignment_0()); }
	(rule__AttrAssList__AttrAssAssignment_0)
	{ after(grammarAccess.getAttrAssListAccess().getAttrAssAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssListAccess().getGroup_1()); }
	(rule__AttrAssList__Group_1__0)*
	{ after(grammarAccess.getAttrAssListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttrAssList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssList__Group_1__0__Impl
	rule__AttrAssList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getAttrAssListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssListAccess().getAttrAssAssignment_1_1()); }
	(rule__AttrAssList__AttrAssAssignment_1_1)
	{ after(grammarAccess.getAttrAssListAccess().getAttrAssAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttrAss__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAss__Group__0__Impl
	rule__AttrAss__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssAccess().getNameAssignment_0()); }
	(rule__AttrAss__NameAssignment_0)
	{ after(grammarAccess.getAttrAssAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAss__Group__1__Impl
	rule__AttrAss__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAttrAssAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAss__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssAccess().getExprAssignment_2()); }
	(rule__AttrAss__ExprAssignment_2)
	{ after(grammarAccess.getAttrAssAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StmtBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StmtBlock__Group__0__Impl
	rule__StmtBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtBlockAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getStmtBlockAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StmtBlock__Group__1__Impl
	rule__StmtBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtBlockAccess().getStatmentsAssignment_1()); }
	(rule__StmtBlock__StatmentsAssignment_1)*
	{ after(grammarAccess.getStmtBlockAccess().getStatmentsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StmtBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtBlockAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getStmtBlockAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stmt__Group_2__0__Impl
	rule__Stmt__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtAccess().getAssStmtParserRuleCall_2_0()); }
	ruleAssStmt
	{ after(grammarAccess.getStmtAccess().getAssStmtParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stmt__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getStmtAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__0__Impl
	rule__IfStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__1__Impl
	rule__IfStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIfStmtAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__2__Impl
	rule__IfStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getExprParserRuleCall_2()); }
	ruleExpr
	{ after(grammarAccess.getIfStmtAccess().getExprParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__3__Impl
	rule__IfStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getIfStmtAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__4__Impl
	rule__IfStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getConsequenceAssignment_4()); }
	(rule__IfStmt__ConsequenceAssignment_4)
	{ after(grammarAccess.getIfStmtAccess().getConsequenceAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getGroup_5()); }
	(rule__IfStmt__Group_5__0)?
	{ after(grammarAccess.getIfStmtAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_5__0__Impl
	rule__IfStmt__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getElseKeyword_5_0()); }
	'else'
	{ after(grammarAccess.getIfStmtAccess().getElseKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getAlternativeAssignment_5_1()); }
	(rule__IfStmt__AlternativeAssignment_5_1)
	{ after(grammarAccess.getIfStmtAccess().getAlternativeAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__0__Impl
	rule__ForStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForStmtAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__1__Impl
	rule__ForStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getForStmtAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__2__Impl
	rule__ForStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getInitStmtAssignment_2()); }
	(rule__ForStmt__InitStmtAssignment_2)
	{ after(grammarAccess.getForStmtAccess().getInitStmtAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__3__Impl
	rule__ForStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getForStmtAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__4__Impl
	rule__ForStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getEndConditionAssignment_4()); }
	(rule__ForStmt__EndConditionAssignment_4)
	{ after(grammarAccess.getForStmtAccess().getEndConditionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__5__Impl
	rule__ForStmt__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getForStmtAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__6__Impl
	rule__ForStmt__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getLoopStmtAssignment_6()); }
	(rule__ForStmt__LoopStmtAssignment_6)
	{ after(grammarAccess.getForStmtAccess().getLoopStmtAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__7__Impl
	rule__ForStmt__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getForStmtAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getStmtBlockAssignment_8()); }
	(rule__ForStmt__StmtBlockAssignment_8)
	{ after(grammarAccess.getForStmtAccess().getStmtBlockAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssStmt__Group__0__Impl
	rule__AssStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssStmtAccess().getVarAssignment_0()); }
	(rule__AssStmt__VarAssignment_0)
	{ after(grammarAccess.getAssStmtAccess().getVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssStmt__Group__1__Impl
	rule__AssStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssStmtAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssStmtAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssStmtAccess().getAssignmentAssignment_2()); }
	(rule__AssStmt__AssignmentAssignment_2)
	{ after(grammarAccess.getAssStmtAccess().getAssignmentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnimBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__0__Impl
	rule__AnimBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getAnimationKeyword_0()); }
	'animation'
	{ after(grammarAccess.getAnimBlockAccess().getAnimationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__1__Impl
	rule__AnimBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getNameAssignment_1()); }
	(rule__AnimBlock__NameAssignment_1)
	{ after(grammarAccess.getAnimBlockAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__2__Impl
	rule__AnimBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getAnimBlockAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__3__Impl
	rule__AnimBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getObjTypeAssignment_3()); }
	(rule__AnimBlock__ObjTypeAssignment_3)
	{ after(grammarAccess.getAnimBlockAccess().getObjTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__4__Impl
	rule__AnimBlock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getObjNameAssignment_4()); }
	(rule__AnimBlock__ObjNameAssignment_4)
	{ after(grammarAccess.getAnimBlockAccess().getObjNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__5__Impl
	rule__AnimBlock__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getAnimBlockAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getStmtBlockAssignment_6()); }
	(rule__AnimBlock__StmtBlockAssignment_6)
	{ after(grammarAccess.getAnimBlockAccess().getStmtBlockAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventBlock__Group__0__Impl
	rule__EventBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventBlockAccess().getOnKeyword_0()); }
	'on'
	{ after(grammarAccess.getEventBlockAccess().getOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventBlock__Group__1__Impl
	rule__EventBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventBlockAccess().getKeyAssignment_1()); }
	(rule__EventBlock__KeyAssignment_1)
	{ after(grammarAccess.getEventBlockAccess().getKeyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventBlockAccess().getStmtBlockAssignment_2()); }
	(rule__EventBlock__StmtBlockAssignment_2)
	{ after(grammarAccess.getEventBlockAccess().getStmtBlockAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group__0__Impl
	rule__Var__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getNameAssignment_0()); }
	(rule__Var__NameAssignment_0)
	{ after(grammarAccess.getVarAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group__1__Impl
	rule__Var__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getVarArrayAssignment_1()); }
	(rule__Var__VarArrayAssignment_1)?
	{ after(grammarAccess.getVarAccess().getVarArrayAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getVarPropAssignment_2()); }
	(rule__Var__VarPropAssignment_2)?
	{ after(grammarAccess.getVarAccess().getVarPropAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarArray__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarArray__Group__0__Impl
	rule__VarArray__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarArray__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarArrayAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getVarArrayAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarArray__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarArray__Group__1__Impl
	rule__VarArray__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarArray__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarArrayAccess().getIndexExprAssignment_1()); }
	(rule__VarArray__IndexExprAssignment_1)
	{ after(grammarAccess.getVarArrayAccess().getIndexExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarArray__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarArray__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarArray__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarArrayAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getVarArrayAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarProp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarProp__Group__0__Impl
	rule__VarProp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarProp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarPropAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getVarPropAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarProp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarProp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarProp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarPropAccess().getExtIdAssignment_1()); }
	(rule__VarProp__ExtIdAssignment_1)
	{ after(grammarAccess.getVarPropAccess().getExtIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group__0__Impl
	rule__OrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0()); }
	ruleAndExpr
	{ after(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getGroup_1()); }
	(rule__OrExpr__Group_1__0)*
	{ after(grammarAccess.getOrExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group_1__0__Impl
	rule__OrExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getOperationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrExprAccess().getOperationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group_1__1__Impl
	rule__OrExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getOpAssignment_1_1()); }
	(rule__OrExpr__OpAssignment_1_1)
	{ after(grammarAccess.getOrExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getRightAssignment_1_2()); }
	(rule__OrExpr__RightAssignment_1_2)
	{ after(grammarAccess.getOrExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpr__Group__0__Impl
	rule__AndExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExprAccess().getRelExprParserRuleCall_0()); }
	ruleRelExpr
	{ after(grammarAccess.getAndExprAccess().getRelExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExprAccess().getGroup_1()); }
	(rule__AndExpr__Group_1__0)*
	{ after(grammarAccess.getAndExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpr__Group_1__0__Impl
	rule__AndExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExprAccess().getOperationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndExprAccess().getOperationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpr__Group_1__1__Impl
	rule__AndExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExprAccess().getOpAssignment_1_1()); }
	(rule__AndExpr__OpAssignment_1_1)
	{ after(grammarAccess.getAndExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExprAccess().getRightAssignment_1_2()); }
	(rule__AndExpr__RightAssignment_1_2)
	{ after(grammarAccess.getAndExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group__0__Impl
	rule__RelExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getAddExprParserRuleCall_0()); }
	ruleAddExpr
	{ after(grammarAccess.getRelExprAccess().getAddExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getGroup_1()); }
	(rule__RelExpr__Group_1__0)*
	{ after(grammarAccess.getRelExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group_1__0__Impl
	rule__RelExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getOperationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getRelExprAccess().getOperationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group_1__1__Impl
	rule__RelExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getOpAssignment_1_1()); }
	(rule__RelExpr__OpAssignment_1_1)
	{ after(grammarAccess.getRelExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getRightAssignment_1_2()); }
	(rule__RelExpr__RightAssignment_1_2)
	{ after(grammarAccess.getRelExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group__0__Impl
	rule__AddExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getMultExprParserRuleCall_0()); }
	ruleMultExpr
	{ after(grammarAccess.getAddExprAccess().getMultExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getGroup_1()); }
	(rule__AddExpr__Group_1__0)*
	{ after(grammarAccess.getAddExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group_1__0__Impl
	rule__AddExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getOperationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAddExprAccess().getOperationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group_1__1__Impl
	rule__AddExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getOpAssignment_1_1()); }
	(rule__AddExpr__OpAssignment_1_1)
	{ after(grammarAccess.getAddExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getRightAssignment_1_2()); }
	(rule__AddExpr__RightAssignment_1_2)
	{ after(grammarAccess.getAddExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpr__Group__0__Impl
	rule__MultExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExprAccess().getAlternatives_0()); }
	(rule__MultExpr__Alternatives_0)
	{ after(grammarAccess.getMultExprAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExprAccess().getGroup_1()); }
	(rule__MultExpr__Group_1__0)*
	{ after(grammarAccess.getMultExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpr__Group_1__0__Impl
	rule__MultExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExprAccess().getOperationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMultExprAccess().getOperationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpr__Group_1__1__Impl
	rule__MultExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExprAccess().getOpAssignment_1_1()); }
	(rule__MultExpr__OpAssignment_1_1)
	{ after(grammarAccess.getMultExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExprAccess().getAlternatives_1_2()); }
	(rule__MultExpr__Alternatives_1_2)
	{ after(grammarAccess.getMultExprAccess().getAlternatives_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group__0__Impl
	rule__UnaryExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getUnaryOperationAction_0()); }
	()
	{ after(grammarAccess.getUnaryExprAccess().getUnaryOperationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group__1__Impl
	rule__UnaryExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getOpAssignment_1()); }
	(rule__UnaryExpr__OpAssignment_1)
	{ after(grammarAccess.getUnaryExprAccess().getOpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getRightAssignment_2()); }
	(rule__UnaryExpr__RightAssignment_2)
	{ after(grammarAccess.getUnaryExprAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_0__0__Impl
	rule__Atom__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getIntLiteralAction_0_0()); }
	()
	{ after(grammarAccess.getAtomAccess().getIntLiteralAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getValueAssignment_0_1()); }
	(rule__Atom__ValueAssignment_0_1)
	{ after(grammarAccess.getAtomAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_1__0__Impl
	rule__Atom__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getVarParserRuleCall_1_0()); }
	ruleVar
	{ after(grammarAccess.getAtomAccess().getVarParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getGroup_1_1()); }
	(rule__Atom__Group_1_1__0)?
	{ after(grammarAccess.getAtomAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_1_1__0__Impl
	rule__Atom__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getOperationLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getAtomAccess().getOperationLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_1_1__1__Impl
	rule__Atom__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getOpAssignment_1_1_1()); }
	(rule__Atom__OpAssignment_1_1_1)
	{ after(grammarAccess.getAtomAccess().getOpAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getRightAssignment_1_1_2()); }
	(rule__Atom__RightAssignment_1_1_2)
	{ after(grammarAccess.getAtomAccess().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_2__0__Impl
	rule__Atom__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getExprVarAction_2_0()); }
	()
	{ after(grammarAccess.getAtomAccess().getExprVarAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_2__1__Impl
	rule__Atom__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getLeftParenthesisKeyword_2_1()); }
	'('
	{ after(grammarAccess.getAtomAccess().getLeftParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_2__2__Impl
	rule__Atom__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getExprAssignment_2_2()); }
	(rule__Atom__ExprAssignment_2_2)
	{ after(grammarAccess.getAtomAccess().getExprAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getAtomAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Game__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGameAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getGameAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__AttrAssListAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGameAccess().getAttrAssListAttrAssListParserRuleCall_3_0()); }
		ruleAttrAssList
		{ after(grammarAccess.getGameAccess().getAttrAssListAttrAssListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__DeclAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGameAccess().getDeclDeclParserRuleCall_5_0()); }
		ruleDecl
		{ after(grammarAccess.getGameAccess().getDeclDeclParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__InitBlockAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGameAccess().getInitBlockStmtBlockParserRuleCall_6_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getGameAccess().getInitBlockStmtBlockParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__FunctionsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGameAccess().getFunctionsBlockParserRuleCall_7_0()); }
		ruleBlock
		{ after(grammarAccess.getGameAccess().getFunctionsBlockParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__TypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getTypeIntKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getVarDeclAccess().getTypeIntKeyword_0_0_0()); }
			'int'
			{ after(grammarAccess.getVarDeclAccess().getTypeIntKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getVarDeclAccess().getTypeIntKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__ValueAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getValueInitParserRuleCall_0_2_0()); }
		ruleInit
		{ after(grammarAccess.getVarDeclAccess().getValueInitParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__TypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getTypeIntKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getVarDeclAccess().getTypeIntKeyword_1_0_0()); }
			'int'
			{ after(grammarAccess.getVarDeclAccess().getTypeIntKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getVarDeclAccess().getTypeIntKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__ArrSizeAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getArrSizeINTTerminalRuleCall_1_3_0()); }
		RULE_INT
		{ after(grammarAccess.getVarDeclAccess().getArrSizeINTTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitAccess().getExprExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getInitAccess().getExprExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__TypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getTypeOBJTYPETerminalRuleCall_0_0_0()); }
		RULE_OBJTYPE
		{ after(grammarAccess.getObjDeclAccess().getTypeOBJTYPETerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getObjDeclAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__AttrAssListAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getAttrAssListAttrAssListParserRuleCall_0_3_0()); }
		ruleAttrAssList
		{ after(grammarAccess.getObjDeclAccess().getAttrAssListAttrAssListParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__TypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getTypeOBJTYPETerminalRuleCall_1_0_0()); }
		RULE_OBJTYPE
		{ after(grammarAccess.getObjDeclAccess().getTypeOBJTYPETerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getObjDeclAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__ArrSizeAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getArrSizeINTTerminalRuleCall_1_3_0()); }
		RULE_INT
		{ after(grammarAccess.getObjDeclAccess().getArrSizeINTTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__AttrAssAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssListAccess().getAttrAssAttrAssParserRuleCall_0_0()); }
		ruleAttrAss
		{ after(grammarAccess.getAttrAssListAccess().getAttrAssAttrAssParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__AttrAssAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssListAccess().getAttrAssAttrAssParserRuleCall_1_1_0()); }
		ruleAttrAss
		{ after(grammarAccess.getAttrAssListAccess().getAttrAssAttrAssParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttrAssAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssAccess().getExprExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getAttrAssAccess().getExprExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__StatmentsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStmtBlockAccess().getStatmentsStmtParserRuleCall_1_0()); }
		ruleStmt
		{ after(grammarAccess.getStmtBlockAccess().getStatmentsStmtParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ConsequenceAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getConsequenceStmtBlockParserRuleCall_4_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getIfStmtAccess().getConsequenceStmtBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__AlternativeAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getAlternativeStmtBlockParserRuleCall_5_1_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getIfStmtAccess().getAlternativeStmtBlockParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__InitStmtAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getInitStmtAssStmtParserRuleCall_2_0()); }
		ruleAssStmt
		{ after(grammarAccess.getForStmtAccess().getInitStmtAssStmtParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__EndConditionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getEndConditionExprParserRuleCall_4_0()); }
		ruleExpr
		{ after(grammarAccess.getForStmtAccess().getEndConditionExprParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__LoopStmtAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getLoopStmtAssStmtParserRuleCall_6_0()); }
		ruleAssStmt
		{ after(grammarAccess.getForStmtAccess().getLoopStmtAssStmtParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__StmtBlockAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getStmtBlockStmtBlockParserRuleCall_8_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getForStmtAccess().getStmtBlockStmtBlockParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssStmtAccess().getVarVarParserRuleCall_0_0()); }
		ruleVar
		{ after(grammarAccess.getAssStmtAccess().getVarVarParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__AssignmentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssStmtAccess().getAssignmentExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getAssStmtAccess().getAssignmentExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimBlockAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAnimBlockAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__ObjTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimBlockAccess().getObjTypeOBJTYPETerminalRuleCall_3_0()); }
		RULE_OBJTYPE
		{ after(grammarAccess.getAnimBlockAccess().getObjTypeOBJTYPETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__ObjNameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimBlockAccess().getObjNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getAnimBlockAccess().getObjNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__StmtBlockAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimBlockAccess().getStmtBlockStmtBlockParserRuleCall_6_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getAnimBlockAccess().getStmtBlockStmtBlockParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__KeyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventBlockAccess().getKeyKEYSTROKETerminalRuleCall_1_0()); }
		RULE_KEYSTROKE
		{ after(grammarAccess.getEventBlockAccess().getKeyKEYSTROKETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__StmtBlockAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventBlockAccess().getStmtBlockStmtBlockParserRuleCall_2_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getEventBlockAccess().getStmtBlockStmtBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVarAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__VarArrayAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getVarArrayVarArrayParserRuleCall_1_0()); }
		ruleVarArray
		{ after(grammarAccess.getVarAccess().getVarArrayVarArrayParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__VarPropAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getVarPropVarPropParserRuleCall_2_0()); }
		ruleVarProp
		{ after(grammarAccess.getVarAccess().getVarPropVarPropParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarArray__IndexExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarArrayAccess().getIndexExprExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getVarArrayAccess().getIndexExprExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarProp__ExtIdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarPropAccess().getExtIdIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVarPropAccess().getExtIdIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExprAccess().getOpORTerminalRuleCall_1_1_0()); }
		RULE_OR
		{ after(grammarAccess.getOrExprAccess().getOpORTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_2_0()); }
		ruleAndExpr
		{ after(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExprAccess().getOpANDTerminalRuleCall_1_1_0()); }
		RULE_AND
		{ after(grammarAccess.getAndExprAccess().getOpANDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExprAccess().getRightRelExprParserRuleCall_1_2_0()); }
		ruleRelExpr
		{ after(grammarAccess.getAndExprAccess().getRightRelExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelExprAccess().getOpREL_OPTerminalRuleCall_1_1_0()); }
		RULE_REL_OP
		{ after(grammarAccess.getRelExprAccess().getOpREL_OPTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelExprAccess().getRightAddExprParserRuleCall_1_2_0()); }
		ruleAddExpr
		{ after(grammarAccess.getRelExprAccess().getRightAddExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExprAccess().getOpAlternatives_1_1_0()); }
		(rule__AddExpr__OpAlternatives_1_1_0)
		{ after(grammarAccess.getAddExprAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExprAccess().getRightMultExprParserRuleCall_1_2_0()); }
		ruleMultExpr
		{ after(grammarAccess.getAddExprAccess().getRightMultExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExprAccess().getOpAlternatives_1_1_0()); }
		(rule__MultExpr__OpAlternatives_1_1_0)
		{ after(grammarAccess.getMultExprAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__RightAssignment_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExprAccess().getRightUnaryExprParserRuleCall_1_2_0_0()); }
		ruleUnaryExpr
		{ after(grammarAccess.getMultExprAccess().getRightUnaryExprParserRuleCall_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__RightAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExprAccess().getRightAtomParserRuleCall_1_2_1_0()); }
		ruleAtom
		{ after(grammarAccess.getMultExprAccess().getRightAtomParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__OpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getOpAlternatives_1_0()); }
		(rule__UnaryExpr__OpAlternatives_1_0)
		{ after(grammarAccess.getUnaryExprAccess().getOpAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getRightAtomParserRuleCall_2_0()); }
		ruleAtom
		{ after(grammarAccess.getUnaryExprAccess().getRightAtomParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__OpAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomAccess().getOpTouchesKeyword_1_1_1_0()); }
		(
			{ before(grammarAccess.getAtomAccess().getOpTouchesKeyword_1_1_1_0()); }
			'touches'
			{ after(grammarAccess.getAtomAccess().getOpTouchesKeyword_1_1_1_0()); }
		)
		{ after(grammarAccess.getAtomAccess().getOpTouchesKeyword_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomAccess().getRightVarParserRuleCall_1_1_2_0()); }
		ruleVar
		{ after(grammarAccess.getAtomAccess().getRightVarParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__ExprAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomAccess().getExprExprParserRuleCall_2_2_0()); }
		ruleExpr
		{ after(grammarAccess.getAtomAccess().getExprExprParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_OBJTYPE : ('rectangle'|'triangle'|'circle');

RULE_KEYSTROKE : ('space'|'leftarrow'|'rightarrow'|'uparrow'|'downarrow');

RULE_OR : '||';

RULE_AND : '&&';

RULE_REL_OP : ('=='|'<'|'<=');

RULE_MULT : '*';

RULE_DIV : '/';

RULE_NOT : '!';

RULE_MINUS : '-';

RULE_PLUS : '+';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
