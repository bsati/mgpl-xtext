/**
 * generated by Xtext 2.24.0
 */
package org.xtext.example.mydsl.mGPL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.mGPL.AttrAssList;
import org.xtext.example.mydsl.mGPL.Block;
import org.xtext.example.mydsl.mGPL.Decl;
import org.xtext.example.mydsl.mGPL.Game;
import org.xtext.example.mydsl.mGPL.MGPLPackage;
import org.xtext.example.mydsl.mGPL.StmtBlock;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Game</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.mGPL.impl.GameImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mGPL.impl.GameImpl#getAttrAssList <em>Attr Ass List</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mGPL.impl.GameImpl#getDecl <em>Decl</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mGPL.impl.GameImpl#getInitBlock <em>Init Block</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mGPL.impl.GameImpl#getFunctions <em>Functions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GameImpl extends MinimalEObjectImpl.Container implements Game
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getAttrAssList() <em>Attr Ass List</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttrAssList()
   * @generated
   * @ordered
   */
  protected AttrAssList attrAssList;

  /**
   * The cached value of the '{@link #getDecl() <em>Decl</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDecl()
   * @generated
   * @ordered
   */
  protected EList<Decl> decl;

  /**
   * The cached value of the '{@link #getInitBlock() <em>Init Block</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitBlock()
   * @generated
   * @ordered
   */
  protected StmtBlock initBlock;

  /**
   * The cached value of the '{@link #getFunctions() <em>Functions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctions()
   * @generated
   * @ordered
   */
  protected EList<Block> functions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GameImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MGPLPackage.Literals.GAME;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MGPLPackage.GAME__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AttrAssList getAttrAssList()
  {
    return attrAssList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAttrAssList(AttrAssList newAttrAssList, NotificationChain msgs)
  {
    AttrAssList oldAttrAssList = attrAssList;
    attrAssList = newAttrAssList;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MGPLPackage.GAME__ATTR_ASS_LIST, oldAttrAssList, newAttrAssList);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAttrAssList(AttrAssList newAttrAssList)
  {
    if (newAttrAssList != attrAssList)
    {
      NotificationChain msgs = null;
      if (attrAssList != null)
        msgs = ((InternalEObject)attrAssList).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MGPLPackage.GAME__ATTR_ASS_LIST, null, msgs);
      if (newAttrAssList != null)
        msgs = ((InternalEObject)newAttrAssList).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MGPLPackage.GAME__ATTR_ASS_LIST, null, msgs);
      msgs = basicSetAttrAssList(newAttrAssList, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MGPLPackage.GAME__ATTR_ASS_LIST, newAttrAssList, newAttrAssList));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Decl> getDecl()
  {
    if (decl == null)
    {
      decl = new EObjectContainmentEList<Decl>(Decl.class, this, MGPLPackage.GAME__DECL);
    }
    return decl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StmtBlock getInitBlock()
  {
    return initBlock;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInitBlock(StmtBlock newInitBlock, NotificationChain msgs)
  {
    StmtBlock oldInitBlock = initBlock;
    initBlock = newInitBlock;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MGPLPackage.GAME__INIT_BLOCK, oldInitBlock, newInitBlock);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInitBlock(StmtBlock newInitBlock)
  {
    if (newInitBlock != initBlock)
    {
      NotificationChain msgs = null;
      if (initBlock != null)
        msgs = ((InternalEObject)initBlock).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MGPLPackage.GAME__INIT_BLOCK, null, msgs);
      if (newInitBlock != null)
        msgs = ((InternalEObject)newInitBlock).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MGPLPackage.GAME__INIT_BLOCK, null, msgs);
      msgs = basicSetInitBlock(newInitBlock, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MGPLPackage.GAME__INIT_BLOCK, newInitBlock, newInitBlock));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Block> getFunctions()
  {
    if (functions == null)
    {
      functions = new EObjectContainmentEList<Block>(Block.class, this, MGPLPackage.GAME__FUNCTIONS);
    }
    return functions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MGPLPackage.GAME__ATTR_ASS_LIST:
        return basicSetAttrAssList(null, msgs);
      case MGPLPackage.GAME__DECL:
        return ((InternalEList<?>)getDecl()).basicRemove(otherEnd, msgs);
      case MGPLPackage.GAME__INIT_BLOCK:
        return basicSetInitBlock(null, msgs);
      case MGPLPackage.GAME__FUNCTIONS:
        return ((InternalEList<?>)getFunctions()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MGPLPackage.GAME__NAME:
        return getName();
      case MGPLPackage.GAME__ATTR_ASS_LIST:
        return getAttrAssList();
      case MGPLPackage.GAME__DECL:
        return getDecl();
      case MGPLPackage.GAME__INIT_BLOCK:
        return getInitBlock();
      case MGPLPackage.GAME__FUNCTIONS:
        return getFunctions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MGPLPackage.GAME__NAME:
        setName((String)newValue);
        return;
      case MGPLPackage.GAME__ATTR_ASS_LIST:
        setAttrAssList((AttrAssList)newValue);
        return;
      case MGPLPackage.GAME__DECL:
        getDecl().clear();
        getDecl().addAll((Collection<? extends Decl>)newValue);
        return;
      case MGPLPackage.GAME__INIT_BLOCK:
        setInitBlock((StmtBlock)newValue);
        return;
      case MGPLPackage.GAME__FUNCTIONS:
        getFunctions().clear();
        getFunctions().addAll((Collection<? extends Block>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MGPLPackage.GAME__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MGPLPackage.GAME__ATTR_ASS_LIST:
        setAttrAssList((AttrAssList)null);
        return;
      case MGPLPackage.GAME__DECL:
        getDecl().clear();
        return;
      case MGPLPackage.GAME__INIT_BLOCK:
        setInitBlock((StmtBlock)null);
        return;
      case MGPLPackage.GAME__FUNCTIONS:
        getFunctions().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MGPLPackage.GAME__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MGPLPackage.GAME__ATTR_ASS_LIST:
        return attrAssList != null;
      case MGPLPackage.GAME__DECL:
        return decl != null && !decl.isEmpty();
      case MGPLPackage.GAME__INIT_BLOCK:
        return initBlock != null;
      case MGPLPackage.GAME__FUNCTIONS:
        return functions != null && !functions.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //GameImpl
