/*
 * generated by Xtext 2.24.0
 */
grammar InternalMGPL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MGPLGrammarAccess;

}

@parser::members {

 	private MGPLGrammarAccess grammarAccess;

    public InternalMGPLParser(TokenStream input, MGPLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Game";
   	}

   	@Override
   	protected MGPLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleGame
entryRuleGame returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGameRule()); }
	iv_ruleGame=ruleGame
	{ $current=$iv_ruleGame.current; }
	EOF;

// Rule Game
ruleGame returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='game'
		{
			newLeafNode(otherlv_0, grammarAccess.getGameAccess().getGameKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGameAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getGameAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getAttrAssListAttrAssListParserRuleCall_3_0());
				}
				lv_attrAssList_3_0=ruleAttrAssList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					set(
						$current,
						"attrAssList",
						lv_attrAssList_3_0,
						"org.xtext.example.mydsl.MGPL.AttrAssList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getGameAccess().getRightParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getDeclDeclParserRuleCall_5_0());
				}
				lv_decl_5_0=ruleDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					add(
						$current,
						"decl",
						lv_decl_5_0,
						"org.xtext.example.mydsl.MGPL.Decl");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getInitBlockStmtBlockParserRuleCall_6_0());
				}
				lv_initBlock_6_0=ruleStmtBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					set(
						$current,
						"initBlock",
						lv_initBlock_6_0,
						"org.xtext.example.mydsl.MGPL.StmtBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getFunctionsBlockParserRuleCall_7_0());
				}
				lv_functions_7_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					add(
						$current,
						"functions",
						lv_functions_7_0,
						"org.xtext.example.mydsl.MGPL.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleDecl
entryRuleDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclRule()); }
	iv_ruleDecl=ruleDecl
	{ $current=$iv_ruleDecl.current; }
	EOF;

// Rule Decl
ruleDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDeclAccess().getVarDeclParserRuleCall_0_0());
			}
			this_VarDecl_0=ruleVarDecl
			{
				$current = $this_VarDecl_0.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getDeclAccess().getSemicolonKeyword_0_1());
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getDeclAccess().getObjDeclParserRuleCall_1_0());
			}
			this_ObjDecl_2=ruleObjDecl
			{
				$current = $this_ObjDecl_2.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getDeclAccess().getSemicolonKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleVarDecl
entryRuleVarDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarDeclRule()); }
	iv_ruleVarDecl=ruleVarDecl
	{ $current=$iv_ruleVarDecl.current; }
	EOF;

// Rule VarDecl
ruleVarDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_type_0_0='int'
					{
						newLeafNode(lv_type_0_0, grammarAccess.getVarDeclAccess().getTypeIntKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVarDeclRule());
						}
						setWithLastConsumed($current, "type", lv_type_0_0, "int");
					}
				)
			)
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVarDeclRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getVarDeclAccess().getValueInitParserRuleCall_0_2_0());
					}
					lv_value_2_0=ruleInit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarDeclRule());
						}
						set(
							$current,
							"value",
							lv_value_2_0,
							"org.xtext.example.mydsl.MGPL.Init");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			(
				(
					lv_type_3_0='int'
					{
						newLeafNode(lv_type_3_0, grammarAccess.getVarDeclAccess().getTypeIntKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVarDeclRule());
						}
						setWithLastConsumed($current, "type", lv_type_3_0, "int");
					}
				)
			)
			(
				(
					lv_name_4_0=RULE_ID
					{
						newLeafNode(lv_name_4_0, grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVarDeclRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getVarDeclAccess().getLeftSquareBracketKeyword_1_2());
			}
			(
				(
					lv_arrSize_6_0=RULE_INT
					{
						newLeafNode(lv_arrSize_6_0, grammarAccess.getVarDeclAccess().getArrSizeINTTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVarDeclRule());
						}
						setWithLastConsumed(
							$current,
							"arrSize",
							lv_arrSize_6_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getVarDeclAccess().getRightSquareBracketKeyword_1_4());
			}
		)
	)
;

// Entry rule entryRuleInit
entryRuleInit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitRule()); }
	iv_ruleInit=ruleInit
	{ $current=$iv_ruleInit.current; }
	EOF;

// Rule Init
ruleInit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='='
		{
			newLeafNode(otherlv_0, grammarAccess.getInitAccess().getEqualsSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInitAccess().getExprExprParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"org.xtext.example.mydsl.MGPL.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleObjDecl
entryRuleObjDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjDeclRule()); }
	iv_ruleObjDecl=ruleObjDecl
	{ $current=$iv_ruleObjDecl.current; }
	EOF;

// Rule ObjDecl
ruleObjDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_type_0_0=RULE_OBJTYPE
					{
						newLeafNode(lv_type_0_0, grammarAccess.getObjDeclAccess().getTypeOBJTYPETerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getObjDeclRule());
						}
						setWithLastConsumed(
							$current,
							"type",
							lv_type_0_0,
							"org.xtext.example.mydsl.MGPL.OBJTYPE");
					}
				)
			)
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getObjDeclAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getObjDeclRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getObjDeclAccess().getLeftParenthesisKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getObjDeclAccess().getAttrAssListAttrAssListParserRuleCall_0_3_0());
					}
					lv_attrAssList_3_0=ruleAttrAssList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getObjDeclRule());
						}
						set(
							$current,
							"attrAssList",
							lv_attrAssList_3_0,
							"org.xtext.example.mydsl.MGPL.AttrAssList");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getObjDeclAccess().getRightParenthesisKeyword_0_4());
			}
		)
		    |
		(
			(
				(
					lv_type_5_0=RULE_OBJTYPE
					{
						newLeafNode(lv_type_5_0, grammarAccess.getObjDeclAccess().getTypeOBJTYPETerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getObjDeclRule());
						}
						setWithLastConsumed(
							$current,
							"type",
							lv_type_5_0,
							"org.xtext.example.mydsl.MGPL.OBJTYPE");
					}
				)
			)
			(
				(
					lv_name_6_0=RULE_ID
					{
						newLeafNode(lv_name_6_0, grammarAccess.getObjDeclAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getObjDeclRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_6_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_7='['
			{
				newLeafNode(otherlv_7, grammarAccess.getObjDeclAccess().getLeftSquareBracketKeyword_1_2());
			}
			(
				(
					lv_arrSize_8_0=RULE_INT
					{
						newLeafNode(lv_arrSize_8_0, grammarAccess.getObjDeclAccess().getArrSizeINTTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getObjDeclRule());
						}
						setWithLastConsumed(
							$current,
							"arrSize",
							lv_arrSize_8_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_9=']'
			{
				newLeafNode(otherlv_9, grammarAccess.getObjDeclAccess().getRightSquareBracketKeyword_1_4());
			}
		)
	)
;

// Entry rule entryRuleAttrAssList
entryRuleAttrAssList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttrAssListRule()); }
	iv_ruleAttrAssList=ruleAttrAssList
	{ $current=$iv_ruleAttrAssList.current; }
	EOF;

// Rule AttrAssList
ruleAttrAssList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAttrAssListAccess().getAttrAssAttrAssParserRuleCall_0_0());
				}
				lv_attrAss_0_0=ruleAttrAss
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttrAssListRule());
					}
					add(
						$current,
						"attrAss",
						lv_attrAss_0_0,
						"org.xtext.example.mydsl.MGPL.AttrAss");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getAttrAssListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttrAssListAccess().getAttrAssAttrAssParserRuleCall_1_1_0());
					}
					lv_attrAss_2_0=ruleAttrAss
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttrAssListRule());
						}
						add(
							$current,
							"attrAss",
							lv_attrAss_2_0,
							"org.xtext.example.mydsl.MGPL.AttrAss");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAttrAss
entryRuleAttrAss returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttrAssRule()); }
	iv_ruleAttrAss=ruleAttrAss
	{ $current=$iv_ruleAttrAss.current; }
	EOF;

// Rule AttrAss
ruleAttrAss returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAttrAssAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttrAssRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAttrAssAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttrAssAccess().getExprExprParserRuleCall_2_0());
				}
				lv_expr_2_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttrAssRule());
					}
					set(
						$current,
						"expr",
						lv_expr_2_0,
						"org.xtext.example.mydsl.MGPL.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStmtBlock
entryRuleStmtBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStmtBlockRule()); }
	iv_ruleStmtBlock=ruleStmtBlock
	{ $current=$iv_ruleStmtBlock.current; }
	EOF;

// Rule StmtBlock
ruleStmtBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getStmtBlockAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStmtBlockAccess().getStatementsStmtParserRuleCall_1_0());
				}
				lv_statements_1_0=ruleStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStmtBlockRule());
					}
					add(
						$current,
						"statements",
						lv_statements_1_0,
						"org.xtext.example.mydsl.MGPL.Stmt");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getStmtBlockAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleStmt
entryRuleStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStmtRule()); }
	iv_ruleStmt=ruleStmt
	{ $current=$iv_ruleStmt.current; }
	EOF;

// Rule Stmt
ruleStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStmtAccess().getIfStmtParserRuleCall_0());
		}
		this_IfStmt_0=ruleIfStmt
		{
			$current = $this_IfStmt_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStmtAccess().getForStmtParserRuleCall_1());
		}
		this_ForStmt_1=ruleForStmt
		{
			$current = $this_ForStmt_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			{
				newCompositeNode(grammarAccess.getStmtAccess().getAssStmtParserRuleCall_2_0());
			}
			this_AssStmt_2=ruleAssStmt
			{
				$current = $this_AssStmt_2.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getStmtAccess().getSemicolonKeyword_2_1());
			}
		)
	)
;

// Entry rule entryRuleIfStmt
entryRuleIfStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStmtRule()); }
	iv_ruleIfStmt=ruleIfStmt
	{ $current=$iv_ruleIfStmt.current; }
	EOF;

// Rule IfStmt
ruleIfStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfStmtAccess().getIfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIfStmtAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStmtAccess().getConditionExprParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStmtRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"org.xtext.example.mydsl.MGPL.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfStmtAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStmtAccess().getConsequenceStmtBlockParserRuleCall_4_0());
				}
				lv_consequence_4_0=ruleStmtBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStmtRule());
					}
					set(
						$current,
						"consequence",
						lv_consequence_4_0,
						"org.xtext.example.mydsl.MGPL.StmtBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='else'
			{
				newLeafNode(otherlv_5, grammarAccess.getIfStmtAccess().getElseKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStmtAccess().getAlternativeStmtBlockParserRuleCall_5_1_0());
					}
					lv_alternative_6_0=ruleStmtBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStmtRule());
						}
						set(
							$current,
							"alternative",
							lv_alternative_6_0,
							"org.xtext.example.mydsl.MGPL.StmtBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleForStmt
entryRuleForStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForStmtRule()); }
	iv_ruleForStmt=ruleForStmt
	{ $current=$iv_ruleForStmt.current; }
	EOF;

// Rule ForStmt
ruleForStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForStmtAccess().getForKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getForStmtAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStmtAccess().getInitStmtAssStmtParserRuleCall_2_0());
				}
				lv_initStmt_2_0=ruleAssStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStmtRule());
					}
					set(
						$current,
						"initStmt",
						lv_initStmt_2_0,
						"org.xtext.example.mydsl.MGPL.AssStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getForStmtAccess().getSemicolonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStmtAccess().getEndConditionExprParserRuleCall_4_0());
				}
				lv_endCondition_4_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStmtRule());
					}
					set(
						$current,
						"endCondition",
						lv_endCondition_4_0,
						"org.xtext.example.mydsl.MGPL.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getForStmtAccess().getSemicolonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStmtAccess().getLoopStmtAssStmtParserRuleCall_6_0());
				}
				lv_loopStmt_6_0=ruleAssStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStmtRule());
					}
					set(
						$current,
						"loopStmt",
						lv_loopStmt_6_0,
						"org.xtext.example.mydsl.MGPL.AssStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getForStmtAccess().getRightParenthesisKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStmtAccess().getStmtBlockStmtBlockParserRuleCall_8_0());
				}
				lv_stmtBlock_8_0=ruleStmtBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStmtRule());
					}
					set(
						$current,
						"stmtBlock",
						lv_stmtBlock_8_0,
						"org.xtext.example.mydsl.MGPL.StmtBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAssStmt
entryRuleAssStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssStmtRule()); }
	iv_ruleAssStmt=ruleAssStmt
	{ $current=$iv_ruleAssStmt.current; }
	EOF;

// Rule AssStmt
ruleAssStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAssStmtAccess().getVarVarParserRuleCall_0_0());
				}
				lv_var_0_0=ruleVar
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssStmtRule());
					}
					set(
						$current,
						"var",
						lv_var_0_0,
						"org.xtext.example.mydsl.MGPL.Var");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAssStmtAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssStmtAccess().getAssignmentExprParserRuleCall_2_0());
				}
				lv_assignment_2_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssStmtRule());
					}
					set(
						$current,
						"assignment",
						lv_assignment_2_0,
						"org.xtext.example.mydsl.MGPL.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current; }
	EOF;

// Rule Block
ruleBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBlockAccess().getAnimBlockParserRuleCall_0());
		}
		this_AnimBlock_0=ruleAnimBlock
		{
			$current = $this_AnimBlock_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBlockAccess().getEventBlockParserRuleCall_1());
		}
		this_EventBlock_1=ruleEventBlock
		{
			$current = $this_EventBlock_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAnimBlock
entryRuleAnimBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnimBlockRule()); }
	iv_ruleAnimBlock=ruleAnimBlock
	{ $current=$iv_ruleAnimBlock.current; }
	EOF;

// Rule AnimBlock
ruleAnimBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='animation'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnimBlockAccess().getAnimationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAnimBlockAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnimBlockRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getAnimBlockAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				lv_objType_3_0=RULE_OBJTYPE
				{
					newLeafNode(lv_objType_3_0, grammarAccess.getAnimBlockAccess().getObjTypeOBJTYPETerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnimBlockRule());
					}
					setWithLastConsumed(
						$current,
						"objType",
						lv_objType_3_0,
						"org.xtext.example.mydsl.MGPL.OBJTYPE");
				}
			)
		)
		(
			(
				lv_objName_4_0=RULE_ID
				{
					newLeafNode(lv_objName_4_0, grammarAccess.getAnimBlockAccess().getObjNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnimBlockRule());
					}
					setWithLastConsumed(
						$current,
						"objName",
						lv_objName_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getAnimBlockAccess().getRightParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAnimBlockAccess().getStmtBlockStmtBlockParserRuleCall_6_0());
				}
				lv_stmtBlock_6_0=ruleStmtBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnimBlockRule());
					}
					set(
						$current,
						"stmtBlock",
						lv_stmtBlock_6_0,
						"org.xtext.example.mydsl.MGPL.StmtBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEventBlock
entryRuleEventBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventBlockRule()); }
	iv_ruleEventBlock=ruleEventBlock
	{ $current=$iv_ruleEventBlock.current; }
	EOF;

// Rule EventBlock
ruleEventBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='on'
		{
			newLeafNode(otherlv_0, grammarAccess.getEventBlockAccess().getOnKeyword_0());
		}
		(
			(
				lv_key_1_0=RULE_KEYSTROKE
				{
					newLeafNode(lv_key_1_0, grammarAccess.getEventBlockAccess().getKeyKEYSTROKETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEventBlockRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_1_0,
						"org.xtext.example.mydsl.MGPL.KEYSTROKE");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEventBlockAccess().getStmtBlockStmtBlockParserRuleCall_2_0());
				}
				lv_stmtBlock_2_0=ruleStmtBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventBlockRule());
					}
					set(
						$current,
						"stmtBlock",
						lv_stmtBlock_2_0,
						"org.xtext.example.mydsl.MGPL.StmtBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVar
entryRuleVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarRule()); }
	iv_ruleVar=ruleVar
	{ $current=$iv_ruleVar.current; }
	EOF;

// Rule Var
ruleVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getVarAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVarRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVarAccess().getVarArrayVarArrayParserRuleCall_1_0());
				}
				lv_varArray_1_0=ruleVarArray
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarRule());
					}
					set(
						$current,
						"varArray",
						lv_varArray_1_0,
						"org.xtext.example.mydsl.MGPL.VarArray");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getVarAccess().getVarPropVarPropParserRuleCall_2_0());
				}
				lv_varProp_2_0=ruleVarProp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarRule());
					}
					set(
						$current,
						"varProp",
						lv_varProp_2_0,
						"org.xtext.example.mydsl.MGPL.VarProp");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleVarArray
entryRuleVarArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarArrayRule()); }
	iv_ruleVarArray=ruleVarArray
	{ $current=$iv_ruleVarArray.current; }
	EOF;

// Rule VarArray
ruleVarArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getVarArrayAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVarArrayAccess().getIndexExprExprParserRuleCall_1_0());
				}
				lv_indexExpr_1_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarArrayRule());
					}
					set(
						$current,
						"indexExpr",
						lv_indexExpr_1_0,
						"org.xtext.example.mydsl.MGPL.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getVarArrayAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleVarProp
entryRuleVarProp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarPropRule()); }
	iv_ruleVarProp=ruleVarProp
	{ $current=$iv_ruleVarProp.current; }
	EOF;

// Rule VarProp
ruleVarProp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.'
		{
			newLeafNode(otherlv_0, grammarAccess.getVarPropAccess().getFullStopKeyword_0());
		}
		(
			(
				lv_extId_1_0=RULE_ID
				{
					newLeafNode(lv_extId_1_0, grammarAccess.getVarPropAccess().getExtIdIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVarPropRule());
					}
					setWithLastConsumed(
						$current,
						"extId",
						lv_extId_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleExpr
entryRuleExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprRule()); }
	iv_ruleExpr=ruleExpr
	{ $current=$iv_ruleExpr.current; }
	EOF;

// Rule Expr
ruleExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExprAccess().getOrExprParserRuleCall());
	}
	this_OrExpr_0=ruleOrExpr
	{
		$current = $this_OrExpr_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOrExpr
entryRuleOrExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrExprRule()); }
	iv_ruleOrExpr=ruleOrExpr
	{ $current=$iv_ruleOrExpr.current; }
	EOF;

// Rule OrExpr
ruleOrExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0());
		}
		this_AndExpr_0=ruleAndExpr
		{
			$current = $this_AndExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrExprAccess().getOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0=RULE_OR
					{
						newLeafNode(lv_op_2_0, grammarAccess.getOrExprAccess().getOpORTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOrExprRule());
						}
						setWithLastConsumed(
							$current,
							"op",
							lv_op_2_0,
							"org.xtext.example.mydsl.MGPL.OR");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAndExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExprRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.MGPL.AndExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndExpr
entryRuleAndExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExprRule()); }
	iv_ruleAndExpr=ruleAndExpr
	{ $current=$iv_ruleAndExpr.current; }
	EOF;

// Rule AndExpr
ruleAndExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndExprAccess().getRelExprParserRuleCall_0());
		}
		this_RelExpr_0=ruleRelExpr
		{
			$current = $this_RelExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndExprAccess().getOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0=RULE_AND
					{
						newLeafNode(lv_op_2_0, grammarAccess.getAndExprAccess().getOpANDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAndExprRule());
						}
						setWithLastConsumed(
							$current,
							"op",
							lv_op_2_0,
							"org.xtext.example.mydsl.MGPL.AND");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExprAccess().getRightRelExprParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleRelExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExprRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.MGPL.RelExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRelExpr
entryRuleRelExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelExprRule()); }
	iv_ruleRelExpr=ruleRelExpr
	{ $current=$iv_ruleRelExpr.current; }
	EOF;

// Rule RelExpr
ruleRelExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelExprAccess().getAddExprParserRuleCall_0());
		}
		this_AddExpr_0=ruleAddExpr
		{
			$current = $this_AddExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getRelExprAccess().getOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0=RULE_REL_OP
					{
						newLeafNode(lv_op_2_0, grammarAccess.getRelExprAccess().getOpREL_OPTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelExprRule());
						}
						setWithLastConsumed(
							$current,
							"op",
							lv_op_2_0,
							"org.xtext.example.mydsl.MGPL.REL_OP");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelExprAccess().getRightAddExprParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAddExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelExprRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.MGPL.AddExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAddExpr
entryRuleAddExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddExprRule()); }
	iv_ruleAddExpr=ruleAddExpr
	{ $current=$iv_ruleAddExpr.current; }
	EOF;

// Rule AddExpr
ruleAddExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAddExprAccess().getMultExprParserRuleCall_0());
		}
		this_MultExpr_0=ruleMultExpr
		{
			$current = $this_MultExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAddExprAccess().getOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1=RULE_PLUS
						{
							newLeafNode(lv_op_2_1, grammarAccess.getAddExprAccess().getOpPLUSTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAddExprRule());
							}
							setWithLastConsumed(
								$current,
								"op",
								lv_op_2_1,
								"org.xtext.example.mydsl.MGPL.PLUS");
						}
						    |
						lv_op_2_2=RULE_MINUS
						{
							newLeafNode(lv_op_2_2, grammarAccess.getAddExprAccess().getOpMINUSTerminalRuleCall_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAddExprRule());
							}
							setWithLastConsumed(
								$current,
								"op",
								lv_op_2_2,
								"org.xtext.example.mydsl.MGPL.MINUS");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAddExprAccess().getRightMultExprParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleMultExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAddExprRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.MGPL.MultExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultExpr
entryRuleMultExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultExprRule()); }
	iv_ruleMultExpr=ruleMultExpr
	{ $current=$iv_ruleMultExpr.current; }
	EOF;

// Rule MultExpr
ruleMultExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getMultExprAccess().getUnaryExprParserRuleCall_0_0());
			}
			this_UnaryExpr_0=ruleUnaryExpr
			{
				$current = $this_UnaryExpr_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getMultExprAccess().getAtomParserRuleCall_0_1());
			}
			this_Atom_1=ruleAtom
			{
				$current = $this_Atom_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMultExprAccess().getOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_3_1=RULE_MULT
						{
							newLeafNode(lv_op_3_1, grammarAccess.getMultExprAccess().getOpMULTTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultExprRule());
							}
							setWithLastConsumed(
								$current,
								"op",
								lv_op_3_1,
								"org.xtext.example.mydsl.MGPL.MULT");
						}
						    |
						lv_op_3_2=RULE_DIV
						{
							newLeafNode(lv_op_3_2, grammarAccess.getMultExprAccess().getOpDIVTerminalRuleCall_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultExprRule());
							}
							setWithLastConsumed(
								$current,
								"op",
								lv_op_3_2,
								"org.xtext.example.mydsl.MGPL.DIV");
						}
					)
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMultExprAccess().getRightUnaryExprParserRuleCall_1_2_0_0());
						}
						lv_right_4_0=ruleUnaryExpr
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultExprRule());
							}
							set(
								$current,
								"right",
								lv_right_4_0,
								"org.xtext.example.mydsl.MGPL.UnaryExpr");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getMultExprAccess().getRightAtomParserRuleCall_1_2_1_0());
						}
						lv_right_5_0=ruleAtom
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultExprRule());
							}
							set(
								$current,
								"right",
								lv_right_5_0,
								"org.xtext.example.mydsl.MGPL.Atom");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExprRule()); }
	iv_ruleUnaryExpr=ruleUnaryExpr
	{ $current=$iv_ruleUnaryExpr.current; }
	EOF;

// Rule UnaryExpr
ruleUnaryExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnaryExprAccess().getUnaryOperationAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_op_1_1=RULE_NOT
					{
						newLeafNode(lv_op_1_1, grammarAccess.getUnaryExprAccess().getOpNOTTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnaryExprRule());
						}
						setWithLastConsumed(
							$current,
							"op",
							lv_op_1_1,
							"org.xtext.example.mydsl.MGPL.NOT");
					}
					    |
					lv_op_1_2=RULE_MINUS
					{
						newLeafNode(lv_op_1_2, grammarAccess.getUnaryExprAccess().getOpMINUSTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnaryExprRule());
						}
						setWithLastConsumed(
							$current,
							"op",
							lv_op_1_2,
							"org.xtext.example.mydsl.MGPL.MINUS");
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUnaryExprAccess().getRightAtomParserRuleCall_2_0());
				}
				lv_right_2_0=ruleAtom
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnaryExprRule());
					}
					set(
						$current,
						"right",
						lv_right_2_0,
						"org.xtext.example.mydsl.MGPL.Atom");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAtom
entryRuleAtom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomRule()); }
	iv_ruleAtom=ruleAtom
	{ $current=$iv_ruleAtom.current; }
	EOF;

// Rule Atom
ruleAtom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomAccess().getIntLiteralAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getAtomAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getAtomAccess().getVarParserRuleCall_1_0());
			}
			this_Var_2=ruleVar
			{
				$current = $this_Var_2.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getAtomAccess().getOperationLeftAction_1_1_0(),
							$current);
					}
				)
				(
					(
						lv_op_4_0='touches'
						{
							newLeafNode(lv_op_4_0, grammarAccess.getAtomAccess().getOpTouchesKeyword_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAtomRule());
							}
							setWithLastConsumed($current, "op", lv_op_4_0, "touches");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getAtomAccess().getRightVarParserRuleCall_1_1_2_0());
						}
						lv_right_5_0=ruleVar
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAtomRule());
							}
							set(
								$current,
								"right",
								lv_right_5_0,
								"org.xtext.example.mydsl.MGPL.Var");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomAccess().getExprVarAction_2_0(),
						$current);
				}
			)
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getAtomAccess().getLeftParenthesisKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getExprExprParserRuleCall_2_2_0());
					}
					lv_expr_8_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						set(
							$current,
							"expr",
							lv_expr_8_0,
							"org.xtext.example.mydsl.MGPL.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getAtomAccess().getRightParenthesisKeyword_2_3());
			}
		)
	)
;

RULE_OBJTYPE : ('rectangle'|'triangle'|'circle');

RULE_KEYSTROKE : ('space'|'leftarrow'|'rightarrow'|'uparrow'|'downarrow');

RULE_OR : '||';

RULE_AND : '&&';

RULE_REL_OP : ('=='|'<'|'<=');

RULE_MULT : '*';

RULE_DIV : '/';

RULE_NOT : '!';

RULE_MINUS : '-';

RULE_PLUS : '+';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
