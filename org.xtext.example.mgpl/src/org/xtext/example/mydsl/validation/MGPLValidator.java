/*
 * generated by Xtext 2.24.0
 */
package org.xtext.example.mydsl.validation;

import org.eclipse.emf.ecore.EObject;
import org.xtext.example.mydsl.mGPL.AnimBlock;
import org.xtext.example.mydsl.mGPL.Block;
import org.xtext.example.mydsl.mGPL.Decl;
import org.xtext.example.mydsl.mGPL.Game;
import org.xtext.example.mydsl.mGPL.Var;

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class MGPLValidator extends AbstractMGPLValidator {
	public static final String DUPLICATE_ATTRIBUTE = "duplicateAttribute";
	public static final String MANDATORY_ATTRIBUTE_MISSING = "mandatoryAttributeMissing";
	public static final String ONLY_CONSTANTS = "onlyConstants";
	public static final String ILLEGAL_VALUE = "illegalValue";
	public static final String ILLEGAL_ATTRIBUTE_NAME = "illegalAttributeName";
	public static final String DUPLICATE_DECLARATION = "duplicateDeclaration";
	public static final String NO_MATCHING_DECLARATION = "noMatchingDeclaration";
	public static final String NO_MATCHING_ANIM_BLOCK = "noMatchingAnimationBlock";
	public static final String INVALID_PROPERTY_ACCESS = "invalidPropertyAccess";
	public static final String NO_MATCHING_PROPERTY = "noMatchingProperty";
	public static final String ILLEGAL_LEFT_SIDE = "illegalOperationLeftSide";
	public static final String ILLEGAL_RIGHT_SIDE = "illegalOperationRightSide";
	
	public static boolean isParameter(Var var) {
		EObject container = var.eContainer();
		while(container != null) {
			if(container instanceof AnimBlock) {
				return ((AnimBlock) container).getObjName().equals(var.getName());
			}
			container = container.eContainer();
		}
		return false;
	}
	
	public static Decl findVarDecl(Var var) {
		Game game = (Game) var.eResource().getAllContents().next();
		for(Decl d : game.getDecl()) {
			if(d.getName().equals(var.getName())) {
				if(var.getVarArray() != null) {
					if(d.getArrSize() > 0) {
						return d;
					}
				} else {
					return d;
				}
			}
		}
		return null;
	}
	
	public static boolean isAnimation(Var var) {
		Game game = (Game) var.eResource().getAllContents().next();
		for(Block b : game.getFunctions()) {
			if(b instanceof AnimBlock) {
				AnimBlock anim = (AnimBlock) b;
				if(anim.getName().equals(var.getName())) {
					return true;
				}
			}
		}
		return false;
	}
}
