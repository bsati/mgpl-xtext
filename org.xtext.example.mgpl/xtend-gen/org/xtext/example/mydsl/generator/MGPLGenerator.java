/**
 * generated by Xtext 2.24.0
 */
package org.xtext.example.mydsl.generator;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;
import org.xtext.example.mydsl.mGPL.Game;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class MGPLGenerator extends AbstractGenerator {
  private final String basePackage = "com.games.mpgl";
  
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    EObject _head = IteratorExtensions.<EObject>head(resource.getAllContents());
    final Game game = ((Game) _head);
    final CharSequence code = this.generateGameCode(game);
    fsa.generateFile("java/src/game.java", code);
  }
  
  public CharSequence generateGameCode(final Game game) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package ");
    String _name = game.getName();
    String _plus = ((this.basePackage + ".") + _name);
    _builder.append(_plus);
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("public static void main(String[] args) {");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
}
